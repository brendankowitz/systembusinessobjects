<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.BusinessObjects.Framework</name>
    </assembly>
    <members>
        <member name="T:System.BusinessObjects.Data.HashtableDataCache">
            <summary>
            A simple cache implementation that stores items in a Hashtable,
            Item's do not automatically expire, however expired items will be removed when
            access it attempted.
            </summary>
            <remarks>This class would typically be used in a testing environment or
            when no other cache is available see <seealso cref="T:System.BusinessObjects.Data.AspNetDataCache">AspNetDataCache</seealso>
            </remarks>
        </member>
        <member name="T:System.BusinessObjects.Providers.CacheProvider">
            <summary>
            An abstract provider for access to a cache
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.CreateCacheString(System.String,System.Object[])">
            <summary>
            Create a unique string to use as the key for a cached value
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.GetCache``1(System.String)">
            <summary>
            Gets a cached value
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.GetCache(System.String)">
            <summary>
            Gets a cached value
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.SetCache(System.String,System.Object)">
            <summary>
            Sets a cache value
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.SetCache(System.String,System.Object,System.Web.Caching.CacheItemPriority)">
            <summary>
            Sets a cache value with storage priority
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Providers.CacheProvider.RemoveCache(System.String)">
            <summary>
            Removes a value from the cache
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.CacheProvider.Provider">
            <summary>
            Returns an instance of the default cache provider
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.CacheProvider.Providers">
            <summary>
            Returns a collection of cache providers
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.CacheProvider.DefaultTimeout">
            <summary>
            Returns the default cache timeout
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.CacheProvider.UseCache">
            <summary>
            Returns true if the cache is being used
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.NHibernateSessionProvider.Provider">
            <summary>
            Returns an instance of the default NHibernateSession provider
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Providers.NHibernateSessionProvider.Providers">
            <summary>
            Returns a collection of NHibernateSession providers
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Data.DataObject">
            <summary>
            An abstract class that provides core business object funcationality.
            <remarks>
            Core functionality targets specifically:
            1. tracking/cloning an object's persistance state
            2. providing basic persistance functionality
            3. implementing the built-in binding interfaces for use with .net's built-in datacontrols (ie. GridView)
            </remarks>
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.SetValue(System.String,System.Object)">
            <summary>
            Sets a properties value in the internal property store.
            If a null is passed the property will be reset and removed.
            </summary>
            <param name="keyName">Property name of whos value is to be set</param>
            <param name="value">Value of the property</param>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.IsNull(System.String)">
            <summary>
            Returns true if the property has been set
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.BeginEdit">
            <summary>
            Calls other methods before the dataobject is edited
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.AcceptChanges">
            <summary>
            Accepts the current state of the object
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.RejectChanges">
            <summary>
            Reverts any changes back to the last accepted state
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.Save">
            <summary>
            Saves this business object to the persisted medium.
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.Delete">
            <summary>
            Sets the state of this business object to deleted. Call Save() to update the persisted medium
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.SetLoadRowState">
            <summary>
            Sets the business object's RowState to Loaded
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.GetPersistanceQueryAction">
            <summary>
            Returns the query action needed to save the current state of the object
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.SetSaveRowState">
            <summary>
            Sets the business object's rowstate to indicate the object has been saved
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.Load(System.Int32)">
            <summary>
            Loads a business object with the given ID
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.Clone">
            <summary>
            Clone a deep-copy of this object
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject.AddValidationRules">
            <summary>
            Override this function to add validation rules to this data object
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Data.DataObject.RowState">
            <summary>
            The current rowstate of this business object
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Data.DataObject.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Returns the first error in the object
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Data.DataObject.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Returns the error for a specific column name
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Data.DataObject.QueryAction">
            <summary>
            The type of query needed to persist this business object
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.ValidationRuleCollection.Validate">
            <summary>
            Validates the entire list
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Validation.ValidationRuleCollection.IsValid">
            <summary>
            Returns if the entire list is valid
            </summary>
        </member>
        <member name="P:System.BusinessObjects.Validation.ValidationRuleCollection.Messages">
            <summary>
            Returns any error messages from the validation of the list
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Data.DataObject`1">
            <summary>
            An abstract class that provides core business object funcationality.
            <remarks>
            Core functionality targets specifically:
            1. tracking/cloning an object's persistance state
            2. providing basic persistance functionality
            3. implementing the built-in binding interfaces for use with .net's built-in datacontrols (ie. GridView)
            </remarks>
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject`1.Clone">
            <summary>
            Clone a deep-copy of this object
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject`1.Load(System.Int32)">
            <summary>
            Loads a business object with the given ID
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject`1.Search(NHibernate.ICriteria)">
            <summary>
            Gets a strongly typed list of business objects based on NHibernate criteria
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Data.DataObject`1.Search(NHibernate.IQuery)">
            <summary>
            Gets a strongly typed list of business objects based on an NHibernate Query
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Providers.ProviderHelper">
            <summary>
            A helper class for loading providers from the configuration file
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Validation.ValidatorTemplate">
            <summary>
            Provides a delegate template for validating properties
            </summary>
            <param name="propertyName">Name of the property with the validation error</param>
            <param name="message">Description of the validation error</param>
            <returns>True if the rule is valid, False if it has been broken</returns>
        </member>
        <member name="T:System.BusinessObjects.Data.AspNetDataCache">
            <summary>
            Provides a controlled access to the http cache
            </summary>
        </member>
        <member name="T:System.BusinessObjects.Validation.GeneralAssertionTemplate">
            <summary>
            Brings validation to business objects by providing familiar assertion rules to those found in NUnit.
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.Greater``1(System.BusinessObjects.Data.DataObject,System.String,``0)">
            <summary>
            Compares that a property is greater then the expected.
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.Less``1(System.BusinessObjects.Data.DataObject,System.String,``0)">
            <summary>
            Compares that a property is less then the expected.
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.IsNotEmpty(System.BusinessObjects.Data.DataObject,System.String)">
            <summary>
            Validates that the property is not empty
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.IsNotNull(System.BusinessObjects.Data.DataObject,System.String)">
            <summary>
            Validates that a property is not null
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.LengthGreater(System.BusinessObjects.Data.DataObject,System.String,System.Int32)">
            <summary>
            Validates that a string has a certain length or a collection is of a certain size
            </summary>
        </member>
        <member name="M:System.BusinessObjects.Validation.GeneralAssertionTemplate.LengthLess(System.BusinessObjects.Data.DataObject,System.String,System.Int32)">
            <summary>
            Validates that a string is less than a certain length or a collection is less than a certain size
            </summary>
        </member>
    </members>
</doc>
